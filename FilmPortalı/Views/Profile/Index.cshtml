@model FilmPortalı.Models.Users
@{
    ViewBag.Title = "Profil";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container" style="text-align: right;margin-bottom: 0">
    <button class="btn btn-save" id="profile-save">Kaydet</button>
</div>

<div class="container tabs" style="margin-top: 5px">
    <div class="sidebar">
        <img src="@Session["kullaniciResim"]" alt="@User.Identity.Name" width="50" height="50">
        <h4 style="margin:0">Arwald</h4>

        <ul class="profile-btns">
            <li><a class="active" href="#profile">Profil Bilgileri</a></li>
            <li><a href="#account">Hesap Ayarları</a></li>
            <li><a href="#comments" id="comments-btn">Yorumlar</a></li>
            <li><a href="#list" id="list-btn">Listelerim</a></li>
        </ul>
    </div>




    <div class="profile-wrapper" id="profile" style="display: block">
        @using (Html.BeginForm("UpdateInfo", "Profile", FormMethod.Post, new { id = "profile-form" }))
        {
            <div class="form-group">
                <label for="ad">Ad</label>
                @Html.TextBoxFor(m => m.UName, new { @class = "input-item profile-input", placeholder = "ad" })
            </div>
            <div class="form-group">
                <label for="soyad">Soyad</label>
                @Html.TextBoxFor(m => m.USurname, new { @class = "input-item profile-input", placeholder = "soyad" })
            </div>
            <div class="form-group w25">
                <label for="date">Doğum Tarihi</label>
                @Html.TextBoxFor(m => m.UBirthDate, "{0:dd-MM-yyyy}", new { @class = "input-item profile-input", type = "date" })
            </div>
            <div class="form-group w25">
                <label for="gender">Cinsiyet</label>
                @Html.DropDownList("gender", new List<SelectListItem>
                      { new SelectListItem{Text="Erkek", Value="0"},
                        new SelectListItem{Text="Kız", Value="1"}}, new { @class = "input-item profile-input select-input" })
            </div>
            <div class="form-group w25">
                <label for="twitter">Twitter k. adı</label>
                @Html.TextBoxFor(m => m.UTwitter, new { @class = "input-item profile-input", placeholder = "twitter", id = "twitter" })
            </div>
            <div class="form-group w25">
                <label for="instagram">İnstagram k. adı</label>
                @Html.TextBoxFor(m => m.UInstagram, new { @class = "input-item profile-input", placeholder = "instagram", id = "instagram" })
            </div>
            <div class="form-group w100">
                <label for="hakkımda">Hakkımda</label>
                @Html.TextAreaFor(m => m.UInfo, new { @class = "textarea info-input", placeholder = "hakkımda", id = "hakkımda", rows = "8" })
            </div>
        }
    </div>

    <div class="profile-wrapper" id="account">

        @using (Html.BeginForm("UpdateAccount", "Profile", FormMethod.Post, new { id = "account-form", enctype = "multipart/form-data" }))
        {
            <div class="form-group">
                <label for="img">Profil Resmi</label>
                @Html.TextBox("image", "", new { @class = "input-item profile-input", id = "image", type = "file" })
            </div>
            <div class="form-group">
                <label for="url">Veya Resim URL'si</label>
                @Html.TextBoxFor(m => m.UImage, new { @class = "input-item profile-input", placeholder = "url", id = "url" })
            </div>
            <h3>Şifre Değiştir</h3>
            <div class="form-group">
                <label for="passwd">Yeni Şifre</label>
                @Html.TextBox("passwd", null, new { @class = "input-item profile-input", placeholder = "yeni şifre", id = "passwd", type = "password", disabled = "true" })
            </div>
            <div class="form-group">
                <label for="npasswd">Yeni Şifre Tekrar</label>
                @Html.TextBox("npasswd", null, new { @class = "input-item profile-input", placeholder = "yeni şifre tekrar", id = "npasswd", type = "password", disabled = "true" })
            </div>
            <h3>E-Posta Değiştir</h3>
            <div class="form-group">
                <label for="e-posta">Yeni e-posta</label>
                @Html.TextBoxFor(m => m.UMail, new { @class = "input-item profile-input", placeholder = "yeni e-posta", id = "e-posta", disabled = "true" })
            </div>
            <div class="form-group">
                <label for="ne-posta">Yeni e-posta tekrar</label>
                @Html.TextBoxFor(m => m.UMail, new { @class = "input-item profile-input", placeholder = "yeni e-posta tekrar", id = "ne-posta", disabled = "true" })
            </div>
            <div class="form-group w100">
                @Html.CheckBoxFor(m => m.UNews, new { id = "mail" })
                <label for="mail">Yeni eklenen filmlerden haberdar olmak istiyorum.</label>
                <br>
                @Html.CheckBoxFor(m => m.UAppear, new { id = "status" })
                <label for="status">Kullanıcılar profilimi görüntüleyebilsin.</label>
            </div>
        }
    </div>


    <div class="profile-wrapper" id="comments">


    </div>

    <div class="profile-wrapper" id="list">


    </div>





</div>

<div class="clearfix"></div>
@*$.ajax({
    url: "/Profile/UpdateInfo",
    data: $("#profile-form").serialize(),
    type: "POST",
    success: function (data) {
    PNotify.success({
    text: data.text
    });
    },
    error: function () {
    showAjaxError();
    }
    });
    } else {
    $.ajax({
    url: "/Profile/UpdateAccount",
    data:$("#account-form").serialize(),
    type: "POST",
    cache: false,
    contentType: false,
    processData: false,
    success: function (data) {
    PNotify.success({
    text: data.text
    });
    },
    error: function () {
    showAjaxError();
    }
    });
    }*@

@section scripts{

    <script>

        $(document).ready(function () {
            var urlInput=$("#url");
            if (urlInput.val().includes("/Public/img")) {
                $("#url").val("");
            }
        });

        $("#profile-save").click(function() {

            var opened = $(".profile-btns a.active").attr("href");
            if (opened == "#profile" || opened == "#account") {
                if (opened == "#profile") {
                    $("#profile-form").submit();
                } else {
                    $("#account-form").submit();
                }
            }
        });


        function changeVisible(isShow) {
            var btn = $("#profile-save");
            var isVisible = $("#profile-save").is(":visible");
            if (isShow) {
                if (!isVisible) {
                    btn.show("slow");
                }
            } else {
                if (isVisible) {
                    btn.hide("slow");
                }
            }
        }

        $(".profile-btns").on("click",
            "a",
            function(e) {

                var tab = $(this).attr("href");
                changeVisible(tab == "#profile" || tab == "#account" ? true : false);
                $(this).addClass("active");
                $(this).parent().siblings().children().removeClass("active");
                $(".profile-wrapper").not(tab).css("display", "none");
                $(tab).fadeIn();
                e.preventDefault();
            });

        $("#comments-btn").click(function() {

            $.ajax({
                url: "/Profile/GetComment",
                type: "GET",
                success: function(data) {
                    $("#comments").html(data);
                },
                error: function(error) { console.log(error) }
            });
        });

        $("#list-btn").click(function() {

            $.ajax({
                url: "/Profile/GetList",
                type: "GET",
                success: function(data) {
                    $("#list").html(data);
                },
                error: function() {}
            });
        });

        function removeRow() {

            $(this).parent().parent().toggle("explode",
                function() {
                    $(this).remove();
                });

        }
        //$(".container").on("click", ".edit-comment", function (e) {
        //    var p = $(this).parent().parent().find("p");
        //    var text = p.text().trim();
        //    p.html("<textarea name='comment'> " + text + "</textarea>");

        //});
        function removeList(filmId, type, e) {
            var btn = $(e);
            $.ajax({
                url: "/Profile/RemoveList",
                data: {
                    filmId,
                    type
                },
                type: "GET",
                success: function() {
                    btn.parent().toggle("explode",
                        function() {
                            btn.parent().remove();
                        });
                },
                error: function(error) { console.log(error) }
            });
        }
    </script>

}